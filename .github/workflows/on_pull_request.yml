name: 'on_pull_request'
on:
  - pull_request

jobs:
  lint:
    name: 'tflint'
    if: github.head_ref != 'cicd-scripts'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Setup python'
        uses: actions/setup-python@v2
        with:
            python-version: '3.x'
      - name: 'install tflint'
        run: |
          curl -L "$(curl -Ls https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" -o tflint.zip && unzip -o tflint.zip && rm tflint.zip
      - name: 'run tflint'
        run: |
          ./tflint
  test:
    name: 'unit tests'
    if: github.head_ref != 'cicd-scripts'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'check if tests exist'
        run: |
          RUN_TESTS=1
          if [[ ! -d test ]]; then
            echo "No unit tests defined."
            RUN_TESTS=0
          else
            echo "unit tests found, proceeding"
          fi
          echo "RUN_TESTS=$RUN_TESTS" >> $GITHUB_ENV
      # TODO: go mod init takes a long time. maybe we can do it with a lambda and pull go.sum from s3
      - name: 'install terratest'
        if: env.RUN_TESTS == '1'
        run: |
          cd test
          if [[ ! -f go.mod ]] || [[ ! -f go.sum ]]; then
            go mod init ${{ env.REPO }}
          fi
          go get github.com/gruntwork-io/terratest
          go get github.com/stretchr/testify
        env:
          REPO: github.repository
      - name: 'run tests'
        if: env.RUN_TESTS == '1'
        run: |
          cd test
          go test -v -timeout 30m -parallel 10
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.UNIT_TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.UNIT_TEST_AWS_SECRET_ACCESS_KEY }}